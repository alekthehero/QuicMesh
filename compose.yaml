version: '3.8'

services:
#  zookeeper-service:
#    container_name: zookeeper-service
#    image: confluentinc/cp-zookeeper:latest
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    healthcheck:
#      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  kafka-service:
#    container_name: kafka-service
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_INTERNAL://kafka-service:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
#      KAFKA_NUM_PARTITIONS: 2
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#    depends_on:
#      zookeeper-service:
#        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "bash", "-c", "kafka-broker-api-versions --bootstrap-server localhost:9092" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5

  socket-service:
    container_name: socket-service
    build: .
    ports:
      - "9001:9001/udp"
    environment:
      KAFKA_BROKER: kafka-service:9092
#    depends_on:
#      kafka-service:
#        condition: service_healthy

#  motion-service:
#    container_name: motion-service
#    build: ../Motion
#    ports:
#      - "9002:9002"
#    environment:
#      KAFKA_BROKER: kafka-service:9092
#    depends_on:
#      kafka-service:
#        condition: service_healthy